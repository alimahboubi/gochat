// Code generated by MockGen. DO NOT EDIT.
// Source: internal/user-service/domain/interfaces/email_domain_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockEmailDomainService is a mock of EmailDomainService interface.
type MockEmailDomainService struct {
	ctrl     *gomock.Controller
	recorder *MockEmailDomainServiceMockRecorder
}

// MockEmailDomainServiceMockRecorder is the mock recorder for MockEmailDomainService.
type MockEmailDomainServiceMockRecorder struct {
	mock *MockEmailDomainService
}

// NewMockEmailDomainService creates a new mock instance.
func NewMockEmailDomainService(ctrl *gomock.Controller) *MockEmailDomainService {
	mock := &MockEmailDomainService{ctrl: ctrl}
	mock.recorder = &MockEmailDomainServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmailDomainService) EXPECT() *MockEmailDomainServiceMockRecorder {
	return m.recorder
}

// GenerateEmailVerificationToken mocks base method.
func (m *MockEmailDomainService) GenerateEmailVerificationToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateEmailVerificationToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateEmailVerificationToken indicates an expected call of GenerateEmailVerificationToken.
func (mr *MockEmailDomainServiceMockRecorder) GenerateEmailVerificationToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateEmailVerificationToken", reflect.TypeOf((*MockEmailDomainService)(nil).GenerateEmailVerificationToken))
}

// IsEmailVerificationTokenValid mocks base method.
func (m *MockEmailDomainService) IsEmailVerificationTokenValid(token string, createdAt time.Time) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsEmailVerificationTokenValid", token, createdAt)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsEmailVerificationTokenValid indicates an expected call of IsEmailVerificationTokenValid.
func (mr *MockEmailDomainServiceMockRecorder) IsEmailVerificationTokenValid(token, createdAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsEmailVerificationTokenValid", reflect.TypeOf((*MockEmailDomainService)(nil).IsEmailVerificationTokenValid), token, createdAt)
}
